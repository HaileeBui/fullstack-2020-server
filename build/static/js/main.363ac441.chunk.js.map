{"version":3,"sources":["services/person.js","App.js","index.js"],"names":["baseUrl","newPerson","axios","post","then","response","data","get","id","put","delete","Notification","message","messType","className","Filter","newFilter","handleFilter","value","onChange","PersonForm","props","onSubmit","addContact","newName","handleNameChanged","newNumber","handleNumberChanged","type","Persons","list","removeClick","map","item","name","number","onClick","e","preventDefault","window","confirm","removePerson","indexOf","App","useState","persons","setPersons","setNewName","setNewNumber","setNewFilter","setMessage","messageType","setMessageType","React","useEffect","contactService","console","log","event","target","found","i","length","foundPerson","find","n","updatedPerson","returnedPerson","person","catch","error","filter","p","setTimeout","contactObject","concat","toLocaleLowerCase","includes","deleted","err","finally","promise","ReactDOM","render","document","getElementById"],"mappings":"8NAGMA,EAAU,eAwBD,EAtBG,SAACC,GAEjB,OADgBC,IAAMC,KAAKH,EAASC,GACrBG,MAAK,SAACC,GAAD,OAAcA,EAASC,SAoB9B,EAjBA,WAEb,OADgBJ,IAAMK,IAAIP,GACXI,MAAK,SAACC,GAAD,OAAcA,EAASC,SAe9B,EAZM,SAACE,EAAIP,GAGxB,OAFgBC,IAAMO,IAAN,UAAaT,EAAb,YAAwBQ,GAAMP,GAE/BG,MAAK,SAACC,GAAD,OAAcA,EAASC,SAS9B,EANM,SAACE,GAGpB,OAFgBN,IAAMQ,OAAN,UAAgBV,EAAhB,YAA2BQ,K,OCnBvCG,EAAe,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAC7B,OAAgB,OAAZD,EACO,KAKP,qBAAKE,UAAWD,EAAhB,SACKD,KAKPG,EAAS,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACzB,OACI,sDACuB,uBAAOC,MAAOF,EAAWG,SAAUF,QAK5DG,EAAa,SAACC,GAChB,OACI,uBAAMC,SAAUD,EAAME,WAAtB,UACI,yCACU,uBAAOL,MAAOG,EAAMG,QAASL,SAAUE,EAAMI,uBAEvD,2CAAa,uBAAOP,MAAOG,EAAMK,UAAWP,SAAUE,EAAMM,yBAG5D,8BACI,wBAAQC,KAAK,SAAb,uBAMVC,EAAU,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAUrB,OACI,6BACKD,EAAKE,KAAI,SAAAC,GAAI,OACV,+BACKA,EAAKC,KADV,IACiBD,EAAKE,OAClB,wBAAQC,QAAS,SAAAC,GAAC,OAdb,SAACA,EAAG7B,GACrB6B,EAAEC,iBACEP,GACmBQ,OAAOC,QAAP,YAEfT,EAAYvB,GASciC,CAAaJ,EAAGJ,EAAKzB,KAA3C,oBAFJ,MAASsB,EAAKY,QAAQT,UAyIvBU,EAjIH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACPC,EADO,KACEC,EADF,OAEgBF,mBAAS,IAFzB,mBAEPpB,EAFO,KAEEuB,EAFF,OAGoBH,mBAAS,IAH7B,mBAGPlB,EAHO,KAGIsB,EAHJ,OAIoBJ,mBAAS,IAJ7B,mBAIP5B,EAJO,KAIIiC,EAJJ,OAKgBL,mBAAS,IALzB,mBAKPhC,EALO,KAKEsC,EALF,OAMwBN,mBAAS,IANjC,mBAMPO,EANO,KAMMC,EANN,KAQdC,IAAMC,WAAU,WACZC,IAAwBnD,MAAK,SAAAC,GAAQ,OAAIyC,EAAWzC,MACpDmD,QAAQC,IAAIZ,KACb,IAwGH,OACI,gCACI,2CACA,cAAC,EAAD,CAAcjC,QAASA,EAASC,SAAUsC,IAC1C,cAAC,EAAD,CAAQnC,UAAWA,EAAWC,aAZjB,SAAAyC,GACjBF,QAAQC,IAAI,sBACZR,EAAaS,EAAMC,OAAOzC,UAWtB,yCACA,cAAC,EAAD,CAAYK,WA5GD,SAAAmC,GACfA,EAAMpB,iBAEN,IADA,IAAIsB,GAAQ,EACHC,EAAI,EAAGA,EAAIhB,EAAQiB,OAAQD,IAChC,GAAIhB,EAAQgB,GAAG3B,OAASV,EAAS,CAC7BoC,GAAQ,EACR,MAIR,GAAIA,EAAO,CACP,IAAMG,EAAclB,EAAQmB,MAAK,SAAAC,GAAC,OAAIA,EAAE/B,OAASV,KAKjD,GAJmBe,OAAOC,QACtB,UAAIuB,EAAY7B,KAAhB,uCACA,0CAEY,CACZ,IAAMgC,EAAa,2BAAQH,GAAR,IAAqB5B,OAAQT,IAChD6B,EACkBQ,EAAYvD,GAAI0D,GAC7B9D,MAAK,SAAA+D,GACFrB,EAAWD,EAAQb,KAAI,SAAAoC,GAAM,OAAIA,EAAO5D,KAAOuD,EAAYvD,GAAK4D,EAASD,SAE5EE,OAAM,SAAAC,GACHd,QAAQC,IAAIa,MAEpBxB,EAAWD,EAAQ0B,QAAO,SAACC,GAAD,OAAOA,EAAEhE,KAAOuD,EAAYvD,OACtD0C,EAAW,gBACXE,EAAe,gBACfqB,YAAW,WACPvB,EAAW,MACXE,EAAe,QAChB,KACHL,EAAW,IACXC,EAAa,SAEd,CACH,IAAM0B,EAAgB,CAClBxC,KAAMV,EACNW,OAAQT,EACRlB,GAAIqC,EAAQiB,OAAS,GAEzBP,EACemB,GACVtE,MAAK,SAAA+D,GACFrB,EAAWD,EAAQ8B,OAAOR,OAE7BE,OAAM,SAAAC,GACHd,QAAQC,IAAIa,MAEpBpB,EAAW,iBACXE,EAAe,gBACfqB,YAAW,WACPvB,EAAW,MACXE,EAAe,QAChB,KACHL,EAAW,IACXC,EAAa,MAmDuBxB,QAASA,EAASE,UAAWA,EAC7DD,kBAzBc,SAAAiC,GACtBF,QAAQC,IAAI,sBACZV,EAAWW,EAAMC,OAAOzC,QAuBsBS,oBApBtB,SAAA+B,GACxBF,QAAQC,IAAI,sBACZT,EAAaU,EAAMC,OAAOzC,UAmBtB,yCACA,cAAC,EAAD,CAASY,KAXbd,EAAU8C,OAAS,EAAIjB,EAAQ0B,QAAO,SAAAH,GAAM,OAAIA,EAAOlC,KAAK0C,oBAAoBC,SAAS7D,MAAc6B,EAWpEd,YAjDxB,SAACvB,GACZ,IAAIsE,GAAU,EAEdvB,EACkB/C,GACb6D,OAAM,SAACU,GACJvB,QAAQC,IAAIsB,GACZD,GAAU,KAEbE,SAAQ,WACDF,IACAhC,EAAWD,EAAQ0B,QAAO,SAACC,GAAD,OAAOA,EAAEhE,KAAOA,MAC1C0C,EAAW,mBACXE,EAAe,SACfqB,YAAW,WACPvB,EAAW,MACXE,EAAe,WACd,gBCnJnB6B,EAAU/E,IAAMK,IAAI,iCAC1BiD,QAAQC,IAAIwB,GAEZC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.363ac441.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\nimport axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst addPerson = (newPerson) => {\r\n  const request = axios.post(baseUrl, newPerson);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst updatePerson = (id, newPerson) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newPerson);\r\n\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst removePerson = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n\r\n  return request;\r\n};\r\n\r\nexport default { addPerson, getAll, updatePerson, removePerson };","import React, { useState } from 'react';\r\nimport contactService from \"./services/person\";\r\n\r\nconst Notification = ({ message, messType }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={messType}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Filter = ({ newFilter, handleFilter }) => {\r\n    return (\r\n        <div>\r\n            filter shown with: <input value={newFilter} onChange={handleFilter} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.addContact}>\r\n            <div>\r\n                name: <input value={props.newName} onChange={props.handleNameChanged} />\r\n            </div>\r\n            <div>number: <input value={props.newNumber} onChange={props.handleNumberChanged} />\r\n            </div>\r\n\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst Persons = ({ list, removeClick }) => {\r\n    const removePerson = (e, id) => {\r\n        e.preventDefault();\r\n        if (removeClick) {\r\n            const willDelete = window.confirm(`Delete?`);\r\n            if (willDelete) {\r\n                removeClick(id)\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <ul>\r\n            {list.map(item =>\r\n                <li key={list.indexOf(item)}>\r\n                    {item.name} {item.number}\r\n                    <button onClick={e => removePerson(e, item.id)}>delete</button> </li>\r\n            )}\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([]);\r\n    const [newName, setNewName] = useState('');\r\n    const [newNumber, setNewNumber] = useState('');\r\n    const [newFilter, setNewFilter] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [messageType, setMessageType] = useState('');\r\n\r\n    React.useEffect(() => {\r\n        contactService.getAll().then(response => setPersons(response));\r\n        console.log(persons);\r\n    }, [])\r\n\r\n    const addContact = event => {\r\n        event.preventDefault();\r\n        var found = false;\r\n        for (var i = 0; i < persons.length; i++) {\r\n            if (persons[i].name === newName) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (found) {\r\n            const foundPerson = persons.find(n => n.name === newName);\r\n            const willUpdate = window.confirm(\r\n                `${ foundPerson.name } is alrady added to the phonebook, ` +\r\n                \"replace the old number with a new one?\"\r\n            );\r\n            if (willUpdate) {\r\n                const updatedPerson = { ...foundPerson, number: newNumber };\r\n                contactService\r\n                    .updatePerson(foundPerson.id, updatedPerson)\r\n                    .then(returnedPerson => {\r\n                        setPersons(persons.map(person => person.id !== foundPerson.id ? person : returnedPerson))\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error)\r\n                    });\r\n                setPersons(persons.filter((p) => p.id !== foundPerson.id));\r\n                setMessage(\"Info updated\");\r\n                setMessageType('confirmation')\r\n                setTimeout(() => {\r\n                    setMessage(null)\r\n                    setMessageType(null)\r\n                }, 2000)\r\n                setNewName('');\r\n                setNewNumber('');\r\n            }\r\n        } else {\r\n            const contactObject = {\r\n                name: newName,\r\n                number: newNumber,\r\n                id: persons.length + 1,\r\n            }\r\n            contactService\r\n                .addPerson(contactObject)\r\n                .then(returnedPerson => {\r\n                    setPersons(persons.concat(returnedPerson))\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })\r\n            setMessage(\"Contact added\");\r\n            setMessageType('confirmation')\r\n            setTimeout(() => {\r\n                setMessage(null)\r\n                setMessageType(null)\r\n            }, 2000)\r\n            setNewName(\"\");\r\n            setNewNumber(\"\");\r\n        }\r\n    }\r\n\r\n\r\n    const remove = (id) => {\r\n        let deleted = true;\r\n\r\n        contactService\r\n            .removePerson(id)\r\n            .catch((err) => {\r\n                console.log(err);\r\n                deleted = false;\r\n            })\r\n            .finally(() => {\r\n                if (deleted) {\r\n                    setPersons(persons.filter((p) => p.id !== id));\r\n                    setMessage('Contact deleted');\r\n                    setMessageType('error')\r\n                    setTimeout(() => {\r\n                        setMessage(null)\r\n                        setMessageType('error')\r\n                      }, 2000)\r\n                }\r\n            });\r\n    };\r\n\r\n    const handleNameChanged = event => {\r\n        console.log(\"event.target.value\");\r\n        setNewName(event.target.value);\r\n    }\r\n\r\n    const handleNumberChanged = event => {\r\n        console.log(\"event.target.value\");\r\n        setNewNumber(event.target.value);\r\n    }\r\n\r\n    const handleFilter = event => {\r\n        console.log(\"event.target.value\");\r\n        setNewFilter(event.target.value);\r\n    }\r\n\r\n    const filteredList = () =>\r\n        newFilter.length > 0 ? persons.filter(person => person.name.toLocaleLowerCase().includes(newFilter)) : persons\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            <Notification message={message} messType={messageType}/>\r\n            <Filter newFilter={newFilter} handleFilter={handleFilter} />\r\n            <h2>add new</h2>\r\n            <PersonForm addContact={addContact} newName={newName} newNumber={newNumber}\r\n                handleNameChanged={handleNameChanged} handleNumberChanged={handleNumberChanged} />\r\n            <h2>Numbers</h2>\r\n            <Persons list={filteredList()} removeClick={remove} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport axios from 'axios'\r\n\r\nconst promise = axios.get('http://localhost:3001/persons')\r\nconsole.log(promise)\r\n\r\nReactDOM.render(\r\n  <App/>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}